openapi: 3.0.0
servers:
  - url: 'http://localhost:3480'
info:
  version: 0.1.1-beta
  title: DarkMagician CRUD API
  description: The core CRUD services for DarkMagician
tags:
  - name: Player
    description: CRUD DarkMagician's player
  - name: Decks
    description: decks linked with the player
  - name: Cards
    description: cards linked with decks
paths:
  /players:
    get:
      summary: Get all player insances
      tags:
        - Player
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PlayerView'
    post:
      summary: Create player
      tags:
        - Player
      requestBody:
        description: player instance to create
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlayerPost'
      responses:
        '204':
          description: No content
        '400':
          $ref: '#/components/responses/400'
  '/players/{id}':
    get:
      summary: Get a player instance with Player's ID
      tags:
        - Player
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: ID of player instance to get
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlayerView'
        '404':
          $ref: '#/components/responses/404'
    patch:
      summary: update a player
      tags:
        - Player
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: ID of the player instance to update
      requestBody:
        description: the data to update the player instance with
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlayerUpdate'
      responses:
        '204':
          description: No content
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
    delete:
      summary: update a player
      tags:
        - Player
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: ID of the player instance to update
      responses:
        '204':
          description: No content
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
  /decks:
    get:
      summary: get all deck instances
      tags:
        - Decks
      responses:
        '200':
          description: OK
          content:
            application/json:
              type: array
              elements:
                schema:
                  $ref: '#/components/schemas/DecksView'
        '404':
          $ref: '#/components/responses/404'
    post:
      summary: create a new deck instance
      tags:
        - Decks
      requestBody:
        description: deck instace data
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DecksPost'
      responses:
        '204':
          description: No content
        '400':
          $ref: '#/components/responses/400'
  '/decks/{id}':
    get:
      summary: get deck from ID
      tags:
        - Decks
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: card ID
      responses:
        '200':
          description: OK
          content:
            application/json:
              type: array
              elements:
                schema:
                  $ref: '#/components/schemas/DecksView'
        '404':
          $ref: '#/components/responses/404'
    patch:
      summary: null
      tags:
        - Decks
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: deck ID
      requestBody:
        description: the data to update deck instance with
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DecksUpdate'
      responses:
        '204':
          description: No content
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
    delete:
      summary: delete a deck instance
      tags:
        - Decks
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: deck ID
      responses:
        '204':
          description: No content
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
  '/decks/{player}':
    get:
      summary: get deck from ID
      tags:
        - Decks
      parameters:
        - in: path
          name: player
          schema:
            type: string
          required: true
          description: card ID
      responses:
        '200':
          description: OK
          content:
            application/json:
              type: array
              elements:
                schema:
                  $ref: '#/components/schemas/DecksView'
        '404':
          $ref: '#/components/responses/404'
    patch:
      summary: null
      tags:
        - Decks
      parameters:
        - in: path
          name: player
          schema:
            type: string
          required: true
          description: deck ID
      requestBody:
        description: the data to update deck instance with
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DecksUpdate'
      responses:
        '204':
          description: No content
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
    delete:
      summary: delete a deck instance
      tags:
        - Decks
      parameters:
        - in: path
          name: player
          schema:
            type: string
          required: true
          description: deck ID
      responses:
        '204':
          description: No content
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
  /cards:
    get:
      summary: get all card instances
      tags:
        - Cards
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CardsView'
    post:
      summary: create a card instance
      tags:
        - Cards
      requestBody:
        description: card instance to create
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CardsPost'
      responses:
        '204':
          description: No content
        '400':
          $ref: '#/components/responses/404'
  '/cards/{id}':
    get:
      summary: get card with their ID
      tags:
        - Cards
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: card ID
      responses:
        '200':
          description: OK
          content:
            application/json:
              type: array
              elements:
                schema:
                  $ref: '#/components/schemas/CardsView'
        '404':
          $ref: '#/components/responses/404'
    patch:
      summary: update a card
      tags:
        - Cards
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: card ID
      requestBody:
        description: the data to update card instance with
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CardsUpdate'
      responses:
        '204':
          description: No content
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
    delete:
      summary: delete a card instance
      tags:
        - Cards
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: card ID
      responses:
        '204':
          description: No content
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
  '/cards/{deck}':
    get:
      summary: get cards from a deck with its ID
      tags:
        - Cards
        - Decks
      parameters:
        - in: path
          name: decks
          schema:
            type: string
          required: true
          description: ID of the deck
      responses:
        '200':
          description: OK
          content:
            application/json:
              type: array
              elements:
                schema:
                  $ref: '#/components/schemas/CardsView'
        '404':
          $ref: '#/components/responses/404'
    patch:
      summary: update a card instance via deck ID
      tags:
        - Cards
        - Decks
      parameters:
        - in: path
          name: decks
          schema:
            type: string
          required: true
          description: ID of the deck
      requestBody:
        description: the data to update card instance with
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CardsUpdate'
      responses:
        '204':
          description: No content
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
    delete:
      summary: delete a card instance
      tags:
        - Cards
        - Decks
      parameters:
        - in: path
          name: decks
          schema:
            type: string
          required: true
          description: ID of the decks
      responses:
        '204':
          description: No content
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
  '/cards/{player}':
    get:
      summary: get players cards with their ID
      tags:
        - Cards
        - Player
      parameters:
        - in: path
          name: player
          schema:
            type: string
          required: true
          description: ID of the player
      responses:
        '200':
          description: OK
          content:
            application/json:
              type: array
              elements:
                schema:
                  $ref: '#/components/schemas/CardsView'
        '404':
          $ref: '#/components/responses/404'
    patch:
      summary: update a card
      tags:
        - Cards
        - Player
      parameters:
        - in: path
          name: player
          schema:
            type: string
          required: true
          description: ID of the player
      requestBody:
        description: the data to update card instance with
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CardsUpdate'
      responses:
        '204':
          description: No content
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
    delete:
      summary: delete a card instance
      tags:
        - Cards
        - Player
      parameters:
        - in: path
          name: player
          schema:
            type: string
          required: true
          description: ID of the player
      responses:
        '204':
          description: No content
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
components:
  responses:
    '400':
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '404':
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
  schemas:
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: number
          example: 404
          description: Error status code
        message:
          type: string
          example: Not Found
          description: Error message
    DecksView:
      allOf:
        - $ref: '#/components/schemas/DecksPartial'
        - type: object
          required:
            - id
            - cards
            - player
    DecksPost:
      allOf:
        - $ref: '#/components/schemas/DecksUpdate'
        - type: object
          required:
            - id
            - player
    DecksUpdate:
      allOf:
        - $ref: '#/components/schemas/DecksPartial'
        - type: object
          required:
            - name
            - cards
            - player
    DecksPartial:
      type: object
      properties:
        id:
          type: string
          example: A57WQSXYsfsa
          description: Deck's ID
        cards:
          type: array
          elements:
            $ref: '#/components/schemas/CardsPartial'
        player:
          $ref: '#/components/schemas/PlayerPartial'
    CardsView:
      allOf:
        - $ref: '#/components/schemas/CardsPartial'
        - type: object
          required:
            - id
            - decks
            - player
    CardsPost:
      allOf:
        - $ref: '#/components/schemas/CardsUpdate'
        - type: object
          required:
            - id
            - player
          properties:
            id:
              type: number
              example: 7889905
              description: Card's ID
    CardsUpdate:
      type: object
      required:
        - decks
        - player
      properties:
        decks:
          type: array
          elements:
            $ref: '#/components/schemas/DecksPartial'
        player:
          $ref: '#/components/schemas/PlayerPartial'
    CardsPartial:
      type: object
      properties:
        id:
          type: number
          example: 73580471
          description: Cards ID from YGO-API
        decks:
          type: array
          elements:
            $ref: '#/components/schemas/DecksPartial'
        player:
          $ref: '#/components/schemas/PlayerPartial'
    PlayerView:
      allOf:
        - $ref: '#/components/schemas/PlayerPartial'
        - type: object
          required:
            - id
            - bal
    PlayerPost:
      allOf:
        - $ref: '#/components/schemas/PlayerUpdate'
        - type: object
          required:
            - id
            - bal
    PlayerUpdate:
      allOf:
        - $ref: '#/components/schemas/PlayerPartial'
        - type: object
          required:
            - bal
    PlayerPartial:
      type: object
      properties:
        id:
          type: string
          example: 229651386223034370
          description: Player's Discord ID
        bal:
          type: number
          example: 506
          description: Player's balance
